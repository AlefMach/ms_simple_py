version: "3.8"
services:
  db:
    image: postgres:14.1-alpine
    container_name: billing_microservice_example_db
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - "5432:5432"
    networks:
      - internal-network
      
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test:
        [
            "CMD-SHELL", "pg_isready -d $DATABASE_NAME -U $DATABASE_USER"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  
  db-test:
    image: postgres:14.1-alpine
    container_name: billing_microservice_example_db_test
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - "5433:5432"
    networks:
      - internal-network
      
    volumes:
      - postgres_data_test:/var/lib/postgresql/data/
    healthcheck:
      test:
        [
            "CMD-SHELL", "pg_isready -d $DATABASE_NAME -U $DATABASE_USER"
        ]
      interval: 5s
      timeout: 5s
      retries: 5


  billing_microservice_example:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    stdin_open: true
    tty: true
    container_name: microservice_example_app
    volumes:
      - ./:/usr/src/application
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env-dev
    networks:
      - internal-network
      
      - app-stack-network

    depends_on:
     - db

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    networks:
      - internal-network
      
      - app-stack-network
    depends_on:
     - db

networks:
  app-stack-network:
    name: stack-network
    internal: true
  internal-network:
    internal: true

volumes:
  postgres_data:
  postgres_data_test:
